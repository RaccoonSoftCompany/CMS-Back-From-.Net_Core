// <auto-generated />
using System;
using Article.CMS.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Article.CMS.Api.Migrations
{
    [DbContext(typeof(ArticleCmsdb))]
    [Migration("20210804074952_文章管理系统数据库迁移文件")]
    partial class 文章管理系统数据库迁移文件
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleReads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleReads");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTalks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ATText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleTalks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ATText = "盲人裁判，太真实了吧",
                            ArticleId = 2,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5393),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5399),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            ATText = "什么居然有人敢走天桥？？？",
                            ArticleId = 1,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5403),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5404),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            ATText = "那可是天桥啊，传说走过的人都没了",
                            ArticleId = 1,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5406),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5407),
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            ATText = "中国加油，冲冲冲！！！",
                            ArticleId = 2,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5409),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5410),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ATText = "果然如此a",
                            ArticleId = 3,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5412),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5413),
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            ATText = "这没有犯规？这裁判属实有点水准啊",
                            ArticleId = 3,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5415),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5416),
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            ATText = "什么台风要来了？？",
                            ArticleId = 4,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5418),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5419),
                            UserId = 5
                        },
                        new
                        {
                            Id = 8,
                            ATText = "不慌，根本不在沿海",
                            ArticleId = 4,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5420),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5422),
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            ATText = "清明雨上",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5423),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5425),
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            ATText = "不负如来不负卿",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5426),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5428),
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            ATText = "请君一战",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5430),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(5431),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTextImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ATImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ATImageRank")
                        .HasColumnType("int");

                    b.Property<int>("ArticleTextId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticleTextId");

                    b.ToTable("ArticleTextImages");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isATimage")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleTexts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AText = "测试数据",
                            ArticleId = 1,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(3916),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(3921),
                            isATimage = false
                        },
                        new
                        {
                            Id = 2,
                            AText = "测试数据",
                            ArticleId = 2,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(3926),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(3927),
                            isATimage = false
                        },
                        new
                        {
                            Id = 3,
                            AText = "测试数据",
                            ArticleId = 3,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(3929),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(3930),
                            isATimage = false
                        },
                        new
                        {
                            Id = 4,
                            AText = "测试数据",
                            ArticleId = 4,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(3932),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(3933),
                            isATimage = false
                        },
                        new
                        {
                            Id = 5,
                            AText = "测试数据",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(3935),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(3936),
                            isATimage = false
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Articles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ATitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ATitleImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ATitle = "震惊！一男子从天桥上面路过",
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(2389),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(2395),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ATitle = "震惊！东京奥运会竟然出现这种裁判",
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(2399),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(2400),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            ATitle = "震惊！日本选手竟然是这样的人",
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(2402),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(2403),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ATitle = "震惊！台风进入真的靠近福建了",
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(2405),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(2406),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ATitle = "歌单",
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(2408),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(2409),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.AuditInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditInfo");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Matters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Matters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(190),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "你最喜欢的动物",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(195)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(200),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "你最喜欢的人",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(201)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(203),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "你的童年阴影",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(204)
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(206),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "最想去的地方",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(207)
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(209),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "最喜欢的东西",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(210)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Powers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Powers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(1120),
                            IsActived = true,
                            IsDeleted = false,
                            PName = "超级管理员",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(1125)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(1129),
                            IsActived = true,
                            IsDeleted = false,
                            PName = "管理员",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(1130)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(1132),
                            IsActived = true,
                            IsDeleted = false,
                            PName = "用户",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 324, DateTimeKind.Local).AddTicks(1133)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.UserInfos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 323, DateTimeKind.Local).AddTicks(9081),
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "超管测试",
                            Remarks = "种子数据",
                            Sex = "男",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 323, DateTimeKind.Local).AddTicks(9118),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 323, DateTimeKind.Local).AddTicks(9123),
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "管理员测试",
                            Remarks = "种子数据",
                            Sex = "女",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 323, DateTimeKind.Local).AddTicks(9124),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 323, DateTimeKind.Local).AddTicks(9127),
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "用户测试",
                            Remarks = "种子数据",
                            Sex = "男",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 323, DateTimeKind.Local).AddTicks(9128),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 323, DateTimeKind.Local).AddTicks(9129),
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "用户测试",
                            Remarks = "种子数据",
                            Sex = "女",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 323, DateTimeKind.Local).AddTicks(9131),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 323, DateTimeKind.Local).AddTicks(9132),
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "用户测试",
                            Remarks = "种子数据",
                            Sex = "男",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 323, DateTimeKind.Local).AddTicks(9134),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MatterId")
                        .HasColumnType("int");

                    b.Property<int>("PowerId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatterId");

                    b.HasIndex("PowerId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 320, DateTimeKind.Local).AddTicks(7741),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 1,
                            Remarks = "种子数据",
                            UName = "admin",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 322, DateTimeKind.Local).AddTicks(192)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 322, DateTimeKind.Local).AddTicks(987),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "user",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 322, DateTimeKind.Local).AddTicks(994)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 322, DateTimeKind.Local).AddTicks(997),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "active",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 322, DateTimeKind.Local).AddTicks(998)
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 322, DateTimeKind.Local).AddTicks(1000),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "god",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 322, DateTimeKind.Local).AddTicks(1001)
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 322, DateTimeKind.Local).AddTicks(1003),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "wooz",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 4, 15, 49, 52, 322, DateTimeKind.Local).AddTicks(1004)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleReads", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleReads")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTalks", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleTalks")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTextImages", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.ArticleTexts", "ArticleText")
                        .WithMany("ArticleTextImages")
                        .HasForeignKey("ArticleTextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticleText");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTexts", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleTexts")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Articles", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Users", "user")
                        .WithMany("Articles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.UserInfos", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Users", "User")
                        .WithMany("UserInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Users", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Matters", "Matter")
                        .WithMany("Users")
                        .HasForeignKey("MatterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Article.CMS.Api.Entity.Powers", "Power")
                        .WithMany("Users")
                        .HasForeignKey("PowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matter");

                    b.Navigation("Power");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTexts", b =>
                {
                    b.Navigation("ArticleTextImages");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Articles", b =>
                {
                    b.Navigation("ArticleReads");

                    b.Navigation("ArticleTalks");

                    b.Navigation("ArticleTexts");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Matters", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Powers", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Users", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("UserInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
