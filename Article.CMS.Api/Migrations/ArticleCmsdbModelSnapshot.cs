// <auto-generated />
using System;
using Article.CMS.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Article.CMS.Api.Migrations
{
    [DbContext(typeof(ArticleCmsdb))]
    partial class ArticleCmsdbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleAPraises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleAPraises");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleReads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleReads");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTalks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ATText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleTalks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ATText = "盲人裁判，太真实了吧",
                            ArticleId = 2,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2053),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2057),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            ATText = "什么居然有人敢走天桥？？？",
                            ArticleId = 1,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2060),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2061),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            ATText = "那可是天桥啊，传说走过的人都没了",
                            ArticleId = 1,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2063),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2064),
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            ATText = "中国加油，冲冲冲！！！",
                            ArticleId = 2,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2065),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2066),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ATText = "果然如此a",
                            ArticleId = 3,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2068),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2069),
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            ATText = "这没有犯规？这裁判属实有点水准啊",
                            ArticleId = 3,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2070),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2071),
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            ATText = "什么台风要来了？？",
                            ArticleId = 4,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2073),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2073),
                            UserId = 5
                        },
                        new
                        {
                            Id = 8,
                            ATText = "不慌，根本不在沿海",
                            ArticleId = 4,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2075),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2076),
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            ATText = "清明雨上",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2077),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2078),
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            ATText = "不负如来不负卿",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2080),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2081),
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            ATText = "请君一战",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2082),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(2083),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleTexts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AText = "测试数据",
                            ArticleId = 1,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(773),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(777)
                        },
                        new
                        {
                            Id = 2,
                            AText = "测试数据",
                            ArticleId = 2,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(780),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(781)
                        },
                        new
                        {
                            Id = 3,
                            AText = "测试数据",
                            ArticleId = 3,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(783),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(784)
                        },
                        new
                        {
                            Id = 4,
                            AText = "测试数据",
                            ArticleId = 4,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(785),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(786)
                        },
                        new
                        {
                            Id = 5,
                            AText = "测试数据",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(788),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 763, DateTimeKind.Local).AddTicks(789)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Articles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AIntro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ATitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ATitleImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AIntro = "这里是简介1",
                            ATitle = "震惊！一男子从天桥上面路过",
                            ATitleImageUrl = "UploadFiles/Article.jpg",
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(9837),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(9842),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AIntro = "这里是简介2",
                            ATitle = "震惊！东京奥运会竟然出现这种裁判",
                            ATitleImageUrl = "UploadFiles/Article.jpg",
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(9845),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(9846),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            AIntro = "这里是简介3",
                            ATitle = "震惊！日本选手竟然是这样的人",
                            ATitleImageUrl = "UploadFiles/Article.jpg",
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(9848),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(9849),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            AIntro = "这里是简介4",
                            ATitle = "震惊！台风进入真的靠近福建了",
                            ATitleImageUrl = "UploadFiles/Article.jpg",
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(9850),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(9851),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            AIntro = "这里是简介5",
                            ATitle = "歌单",
                            ATitleImageUrl = "UploadFiles/Article.jpg",
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(9853),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(9854),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.AuditInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditInfo");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ImagesUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ATImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OriginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ImagesUrl");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Matters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Matters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(7601),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "你最喜欢的动物",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(7605)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(7608),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "你最喜欢的人",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(7609)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(7611),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "你的童年阴影",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(7612)
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(7613),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "最想去的地方",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(7614)
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(7616),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "最喜欢的东西",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(7617)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Powers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Powers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(8441),
                            IsActived = true,
                            IsDeleted = false,
                            PName = "超级管理员",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(8446)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(8449),
                            IsActived = true,
                            IsDeleted = false,
                            PName = "管理员",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(8450)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(8451),
                            IsActived = true,
                            IsDeleted = false,
                            PName = "用户",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(8452)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.UserInfos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(6811),
                            ImageURL = "UploadFiles/DefaultImg.png",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "超管测试",
                            Remarks = "种子数据",
                            Sex = "男",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(6825),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(6829),
                            ImageURL = "UploadFiles/DefaultImg.png",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "管理员测试",
                            Remarks = "种子数据",
                            Sex = "女",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(6830),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(6832),
                            ImageURL = "UploadFiles/DefaultImg.png",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "用户测试",
                            Remarks = "种子数据",
                            Sex = "男",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(6833),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(6835),
                            ImageURL = "UploadFiles/DefaultImg.png",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "用户测试",
                            Remarks = "种子数据",
                            Sex = "女",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(6836),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(6837),
                            ImageURL = "UploadFiles/DefaultImg.png",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "用户测试",
                            Remarks = "种子数据",
                            Sex = "男",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 762, DateTimeKind.Local).AddTicks(6838),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MatterId")
                        .HasColumnType("int");

                    b.Property<int>("PowerId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatterId");

                    b.HasIndex("PowerId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 760, DateTimeKind.Local).AddTicks(6057),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 1,
                            Remarks = "种子数据",
                            UName = "admin",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 761, DateTimeKind.Local).AddTicks(3520)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 761, DateTimeKind.Local).AddTicks(4199),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "user",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 761, DateTimeKind.Local).AddTicks(4204)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 761, DateTimeKind.Local).AddTicks(4207),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "active",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 761, DateTimeKind.Local).AddTicks(4208)
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 761, DateTimeKind.Local).AddTicks(4210),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "god",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 761, DateTimeKind.Local).AddTicks(4211)
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 761, DateTimeKind.Local).AddTicks(4213),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "wooz",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 7, 11, 38, 16, 761, DateTimeKind.Local).AddTicks(4214)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleAPraises", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleAPraises")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleReads", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleReads")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTalks", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleTalks")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTexts", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleTexts")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Articles", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Users", "user")
                        .WithMany("Articles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.UserInfos", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Users", "User")
                        .WithMany("UserInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Users", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Matters", "Matter")
                        .WithMany("Users")
                        .HasForeignKey("MatterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Article.CMS.Api.Entity.Powers", "Power")
                        .WithMany("Users")
                        .HasForeignKey("PowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matter");

                    b.Navigation("Power");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Articles", b =>
                {
                    b.Navigation("ArticleAPraises");

                    b.Navigation("ArticleReads");

                    b.Navigation("ArticleTalks");

                    b.Navigation("ArticleTexts");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Matters", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Powers", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Users", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("UserInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
