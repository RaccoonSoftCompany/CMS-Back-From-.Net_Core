// <auto-generated />
using System;
using Article.CMS.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Article.CMS.Api.Migrations
{
    [DbContext(typeof(ArticleCmsdb))]
    [Migration("20210806003933_文章管理系统数据库迁移文件")]
    partial class 文章管理系统数据库迁移文件
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleAPraises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleAPraises");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleReads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleReads");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTalks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ATText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleTalks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ATText = "盲人裁判，太真实了吧",
                            ArticleId = 2,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5150),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5154),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            ATText = "什么居然有人敢走天桥？？？",
                            ArticleId = 1,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5159),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5160),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            ATText = "那可是天桥啊，传说走过的人都没了",
                            ArticleId = 1,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5161),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5163),
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            ATText = "中国加油，冲冲冲！！！",
                            ArticleId = 2,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5165),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5166),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ATText = "果然如此a",
                            ArticleId = 3,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5167),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5168),
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            ATText = "这没有犯规？这裁判属实有点水准啊",
                            ArticleId = 3,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5170),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5171),
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            ATText = "什么台风要来了？？",
                            ArticleId = 4,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5173),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5174),
                            UserId = 5
                        },
                        new
                        {
                            Id = 8,
                            ATText = "不慌，根本不在沿海",
                            ArticleId = 4,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5176),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5177),
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            ATText = "清明雨上",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5178),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5179),
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            ATText = "不负如来不负卿",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5181),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5182),
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            ATText = "请君一战",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5184),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(5185),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleTexts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AText = "测试数据",
                            ArticleId = 1,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(3866),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(3871)
                        },
                        new
                        {
                            Id = 2,
                            AText = "测试数据",
                            ArticleId = 2,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(3875),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(3876)
                        },
                        new
                        {
                            Id = 3,
                            AText = "测试数据",
                            ArticleId = 3,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(3877),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(3878)
                        },
                        new
                        {
                            Id = 4,
                            AText = "测试数据",
                            ArticleId = 4,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(3880),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(3881)
                        },
                        new
                        {
                            Id = 5,
                            AText = "测试数据",
                            ArticleId = 5,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(3883),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(3884)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Articles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AIntro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ATitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ATitleImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AIntro = "这里是简介1",
                            ATitle = "震惊！一男子从天桥上面路过",
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(2816),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(2821),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AIntro = "这里是简介2",
                            ATitle = "震惊！东京奥运会竟然出现这种裁判",
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(2825),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(2826),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            AIntro = "这里是简介3",
                            ATitle = "震惊！日本选手竟然是这样的人",
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(2827),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(2829),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            AIntro = "这里是简介4",
                            ATitle = "震惊！台风进入真的靠近福建了",
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(2830),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(2831),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            AIntro = "这里是简介5",
                            ATitle = "歌单",
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(2833),
                            IsActived = true,
                            IsDeleted = false,
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(2834),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.AuditInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditInfo");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ImagesUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ATImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OriginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ImagesUrl");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Matters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Matters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(378),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "你最喜欢的动物",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(383)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(387),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "你最喜欢的人",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(388)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(390),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "你的童年阴影",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(391)
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(392),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "最想去的地方",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(393)
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(395),
                            IsActived = true,
                            IsDeleted = false,
                            MName = "最喜欢的东西",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(396)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Powers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Powers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(1377),
                            IsActived = true,
                            IsDeleted = false,
                            PName = "超级管理员",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(1382)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(1386),
                            IsActived = true,
                            IsDeleted = false,
                            PName = "管理员",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(1387)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(1388),
                            IsActived = true,
                            IsDeleted = false,
                            PName = "用户",
                            Remarks = "种子数据",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 884, DateTimeKind.Local).AddTicks(1389)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.UserInfos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 883, DateTimeKind.Local).AddTicks(9464),
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "超管测试",
                            Remarks = "种子数据",
                            Sex = "男",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 883, DateTimeKind.Local).AddTicks(9473),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 883, DateTimeKind.Local).AddTicks(9477),
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "管理员测试",
                            Remarks = "种子数据",
                            Sex = "女",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 883, DateTimeKind.Local).AddTicks(9479),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 883, DateTimeKind.Local).AddTicks(9481),
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "用户测试",
                            Remarks = "种子数据",
                            Sex = "男",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 883, DateTimeKind.Local).AddTicks(9482),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 883, DateTimeKind.Local).AddTicks(9484),
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "用户测试",
                            Remarks = "种子数据",
                            Sex = "女",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 883, DateTimeKind.Local).AddTicks(9485),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 883, DateTimeKind.Local).AddTicks(9487),
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "用户测试",
                            Remarks = "种子数据",
                            Sex = "男",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 883, DateTimeKind.Local).AddTicks(9488),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MatterId")
                        .HasColumnType("int");

                    b.Property<int>("PowerId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatterId");

                    b.HasIndex("PowerId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 881, DateTimeKind.Local).AddTicks(337),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 1,
                            Remarks = "种子数据",
                            UName = "admin",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 882, DateTimeKind.Local).AddTicks(4472)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 882, DateTimeKind.Local).AddTicks(5296),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "user",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 882, DateTimeKind.Local).AddTicks(5303)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 882, DateTimeKind.Local).AddTicks(5306),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "active",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 882, DateTimeKind.Local).AddTicks(5307)
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 882, DateTimeKind.Local).AddTicks(5309),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "god",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 882, DateTimeKind.Local).AddTicks(5310)
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 882, DateTimeKind.Local).AddTicks(5312),
                            IsActived = true,
                            IsDeleted = false,
                            MKey = "没有答案",
                            MatterId = 1,
                            PowerId = 3,
                            Remarks = "种子数据",
                            UName = "wooz",
                            Upassword = "113",
                            UpdatedTime = new DateTime(2021, 8, 6, 8, 39, 32, 882, DateTimeKind.Local).AddTicks(5313)
                        });
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleAPraises", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleAPraises")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleReads", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleReads")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTalks", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleTalks")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.ArticleTexts", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Articles", "Article")
                        .WithMany("ArticleTexts")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Articles", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Users", "user")
                        .WithMany("Articles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.UserInfos", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Users", "User")
                        .WithMany("UserInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Users", b =>
                {
                    b.HasOne("Article.CMS.Api.Entity.Matters", "Matter")
                        .WithMany("Users")
                        .HasForeignKey("MatterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Article.CMS.Api.Entity.Powers", "Power")
                        .WithMany("Users")
                        .HasForeignKey("PowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matter");

                    b.Navigation("Power");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Articles", b =>
                {
                    b.Navigation("ArticleAPraises");

                    b.Navigation("ArticleReads");

                    b.Navigation("ArticleTalks");

                    b.Navigation("ArticleTexts");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Matters", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Powers", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Article.CMS.Api.Entity.Users", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("UserInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
